import random
class MicroRNA:

    def __init__(self, position):
        self.position = position 
        self.velocity = PVector(random.uniform(-1.0,1.0),random.uniform(-1.0,1.0))
        self.acceleration = PVector(random.uniform(-1.0,1.0),random.uniform(-1.0,1.0))
        self.top_speed = 1
        self.r = 20
        self.status = 0
        self.spin = 100

    def set_status(self, status):
        self.status = status
        
    def update(self):
        self.velocity.add(self.acceleration)
        self.velocity.limit(self.top_speed)
        self.position.add(self.velocity)
        self.acceleration.mult(0) # reset the velocity
        
    def display(self):
        # print(self.position)
        smooth()
        noFill()
        stroke(0)
        beginShape()
        curveVertex(self.position.x - 60, self.position.x - 60)
        curveVertex(self.position.x - 60, self.position.x - 60)
        curveVertex(self.position.x - 20, self.position.y - 40)
        curveVertex(self.position.x, self.position.y)
        curveVertex(self.position.x, self.position.y + 20)
        curveVertex(self.position.x - 50, self.position.x + 50)
        curveVertex(self.position.x - 50, self.position.x + 50)
        endShape()

            
    def check_cell_edge(self, cell):
        if PVector.dist(self.position, cell.position) >= cell.r:
            self.velocity.x *= random.uniform(-0.5,-2)
            self.velocity.y *= random.uniform(-0.5,-2)

    def check_edge(self):
        if self.position.x < 0 or self.position.x > width - 250:
            self.velocity.x *= -1
            self.velocity.y *= 1
        elif self.position.y < 0 or self.position.y > height:
            self.velocity.y *= -1
            self.velocity.x *= 1
       
